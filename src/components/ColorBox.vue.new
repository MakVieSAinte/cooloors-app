<script setup lang="ts">
import { ref } from 'vue'
import type { Color } from '../types/types'

const props = defineProps<{
  color: Color,
  showRemove?: boolean
}>()

const emit = defineEmits(['toggle-lock', 'remove'])
const copied = ref(false)

const copyToClipboard = async () => {
  await navigator.clipboard.writeText(props.color.hex)
  copied.value = true
  setTimeout(() => {
    copied.value = false
  }, 2000)
}

const toggleLock = () => {
  emit('toggle-lock', props.color.id)
}
</script>

<template>
  <div class="color-box" :style="{ backgroundColor: color.hex }">
    <div class="controls">
      <button @click="toggleLock" :class="{ locked: color.locked }" title="Verrouiller/DÃ©verrouiller">
        {{ color.locked ? 'ðŸ”’' : 'ðŸ”“' }}
      </button>
      <button @click="copyToClipboard" class="copy" title="Copier le code">
        {{ copied ? 'âœ“' : 'ðŸ“‹' }}
      </button>
      <button v-if="showRemove" @click="$emit('remove')" class="remove" title="Supprimer la colonne">
        âœ•
      </button>
    </div>
    <div class="hex-code" @click="copyToClipboard">{{ color.hex }}</div>
  </div>
</template>

<style scoped>
.color-box {
  height: 100vh;
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
  transition: all 0.3s ease;
  cursor: pointer;
}

.color-box:hover {
  flex: 1.2;
}

.controls {
  position: absolute;
  top: 20px;
  display: flex;
  gap: 10px;
  opacity: 0;
  transform: translateY(-10px);
  transition: all 0.3s ease;
}

.color-box:hover .controls {
  opacity: 1;
  transform: translateY(0);
}

button {
  background: rgba(255, 255, 255, 0.3);
  border: none;
  padding: 8px;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 1.2rem;
  backdrop-filter: blur(5px);
}

button:hover {
  background: rgba(255, 255, 255, 0.5);
  transform: translateY(-2px);
}

.locked {
  background: rgba(255, 255, 255, 0.5);
}

.hex-code {
  font-size: 1.2rem;
  color: white;
  text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
  cursor: pointer;
  padding: 8px 16px;
  border-radius: 4px;
  transition: all 0.3s ease;
  opacity: 0.8;
}

.hex-code:hover {
  background: rgba(255, 255, 255, 0.1);
  opacity: 1;
  transform: scale(1.1);
}

.remove {
  color: #ff4444;
}
</style>
